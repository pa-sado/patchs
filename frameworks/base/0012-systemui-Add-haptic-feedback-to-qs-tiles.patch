From 4b2898053898fa652cf54021775973e0d4c28d9c Mon Sep 17 00:00:00 2001
From: Akash Srivastava <akashniki@gmail.com>
Date: Fri, 22 Dec 2023 11:40:30 +0100
Subject: [PATCH 12/21] systemui: Add haptic feedback to qs tiles

Co-authored-by: Krishnakant Shedge <shedgekrishnakant33@gmail.com>
Change-Id: I9b15bf0b96de23b7d4e1489a9d0b29dce863d003
---
 .../android/systemui/qs/tileimpl/QSTileImpl.java   | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileImpl.java b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileImpl.java
index 1ca2a961744b..e9a94b01b44a 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSTileImpl.java
@@ -38,6 +38,8 @@ import android.metrics.LogMaker;
 import android.os.Handler;
 import android.os.Looper;
 import android.os.Message;
+import android.os.Vibrator;
+import android.os.VibrationEffect;
 import android.text.format.DateUtils;
 import android.util.ArraySet;
 import android.util.Log;
@@ -155,6 +157,8 @@ public abstract class QSTileImpl<TState extends State> implements QSTile, Lifecy
      */
     abstract protected void handleUpdateState(TState state, Object arg);
 
+    protected Vibrator mVibrator;
+
     /**
      * Declare the category of this tile.
      *
@@ -202,6 +206,8 @@ public abstract class QSTileImpl<TState extends State> implements QSTile, Lifecy
         mStatusBarStateController = statusBarStateController;
         mActivityStarter = activityStarter;
 
+        mVibrator = mContext.getSystemService(Vibrator.class);
+
         resetStates();
         mUiHandler.post(() -> mLifecycle.setCurrentState(CREATED));
     }
@@ -282,6 +288,12 @@ public abstract class QSTileImpl<TState extends State> implements QSTile, Lifecy
 
     // safe to call from any thread
 
+    public void vibrateTile() {
+        if (mVibrator != null && mVibrator.hasVibrator()) {
+                mVibrator.vibrate(VibrationEffect.get(VibrationEffect.EFFECT_CLICK));
+        }
+    }
+
     public void addCallback(Callback callback) {
         mHandler.obtainMessage(H.ADD_CALLBACK, callback).sendToTarget();
     }
@@ -306,6 +318,7 @@ public abstract class QSTileImpl<TState extends State> implements QSTile, Lifecy
         if (!mFalsingManager.isFalseTap(FalsingManager.LOW_PENALTY)) {
             mHandler.obtainMessage(H.CLICK, eventId, 0, view).sendToTarget();
         }
+        vibrateTile();
     }
 
     public void secondaryClick(@Nullable View view) {
@@ -333,6 +346,7 @@ public abstract class QSTileImpl<TState extends State> implements QSTile, Lifecy
         if (!mFalsingManager.isFalseLongTap(FalsingManager.LOW_PENALTY)) {
             mHandler.obtainMessage(H.LONG_CLICK, eventId, 0, view).sendToTarget();
         }
+        vibrateTile();
     }
 
     public LogMaker populate(LogMaker logMaker) {
-- 
2.45.2

